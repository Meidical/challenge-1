package meia.challenges.challenge1.rules

import meia.challenges.challenge1.facts.PatientAirwayAssessment;
import meia.challenges.challenge1.facts.AssessmentFactor;
import meia.challenges.challenge1.facts.Fact;
import meia.challenges.challenge1.facts.Status;
import meia.challenges.challenge1.facts.Conclusion;
import meia.challenges.challenge1.utils.CertaintyFactor;
import meia.challenges.challenge1.config.CertaintyFactorUtil;
import org.slf4j.Logger
global Logger logger;

query "Conclusions"
	$conclusion : Conclusion()
end

// LEMON Rules for difficult laryngoscopy prediction

// L - Look externally
rule "1 - Difficult Laryngoscopy - Look Externally"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "LEMON",
            code == "L",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setLemonCF(CertaintyFactor.combine($patient.getLemonCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// E - Evaluate 3-3-2 rule
rule "2 - Difficult Laryngoscopy - Evaluate 3-3-2 Rule"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "LEMON",
            code == "E",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setLemonCF(CertaintyFactor.combine($patient.getLemonCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// M - Mallampati score
rule "3 - Difficult Laryngoscopy - Mallampati Score High"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "LEMON",
            code == "M",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setLemonCF(CertaintyFactor.combine($patient.getLemonCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// O - Obstruction/Obesity
rule "4 - Difficult Laryngoscopy - Obstruction or Obesity"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "LEMON",
            code == "O",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setLemonCF(CertaintyFactor.combine($patient.getLemonCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// N - Neck mobility
rule "5 - Difficult Laryngoscopy - Neck Mobility"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "LEMON",
            code == "N",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setLemonCF(CertaintyFactor.combine($patient.getLemonCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// High overall LEMON score indicates difficult laryngoscopy
rule "6 - Overall LEMON Assessment High"
    when
        $patient : PatientAirwayAssessment(lemonCF > 0.6)
    then
        modify($patient) {
            setDifficultAirwayPredicted(true),
            setRecommendedApproach("Consider alternative techniques to direct laryngoscopy")
        }
        logger.info("High LEMON score detected: CF = " + $patient.getLemonCF() +
            ". Difficult laryngoscopy likely.");
end

// MOANS Rules for difficult mask ventilation prediction

// M - Mask seal
rule "7 - Difficult Mask Ventilation - Mask Seal"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "MOANS",
            code == "M",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// O - Obstruction
rule "8 - Difficult Mask Ventilation - Obstruction"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "MOANS",
            code == "O",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// A - Age
rule "9 - Difficult Mask Ventilation - Advanced Age"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "MOANS",
            code == "A",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// N - No teeth
rule "10 - Difficult Mask Ventilation - No Teeth"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "MOANS",
            code == "N",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// S - Stiff
rule "11 - Difficult Mask Ventilation - Stiff Lungs or Airway"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "MOANS",
            code == "S",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// BMI specific rule
rule "12 - Difficult Mask Ventilation - BMI Over 26"
    when
        $patient : PatientAirwayAssessment(bmi > 26)
    then
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), CertaintyFactorUtil.getCertaintyFactor("moans.bmi")))
        }
        logger.info("Patient has BMI > 26, increasing MOANS CF");
end

// High overall MOANS score indicates difficult mask ventilation
rule "13 - Overall MOANS Assessment High"
    when
        $patient : PatientAirwayAssessment(moansCF > 0.6)
    then
        modify($patient) {
            setDifficultAirwayPredicted(true),
            setRecommendedApproach("Consider alternative ventilation techniques")
        }
        logger.info("High MOANS score detected: CF = {}. Difficult mask ventilation likely.",$patient.getMoansCF());
end

// SHORT Rules for difficult cricothyrotomy prediction

// S - Surgery or disruption to the airway
rule "14 - Difficult Cricothyrotomy - Surgery or Disruption"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "SHORT",
            code == "S",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setShortCF(CertaintyFactor.combine($patient.getShortCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// H - Hematoma or infection
rule "15 - Difficult Cricothyrotomy - Hematoma or Infection"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "SHORT",
            code == "H",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setShortCF(CertaintyFactor.combine($patient.getShortCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// O - Obesity
rule "16 - Difficult Cricothyrotomy - Obesity"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "SHORT",
            code == "O",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setShortCF(CertaintyFactor.combine($patient.getShortCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// R - Radiation distortion
rule "17 - Difficult Cricothyrotomy - Radiation"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "SHORT",
            code == "R",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setShortCF(CertaintyFactor.combine($patient.getShortCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// T - Tumor
rule "18 - Difficult Cricothyrotomy - Tumor"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "SHORT",
            code == "T",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setShortCF(CertaintyFactor.combine($patient.getShortCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// High overall SHORT score indicates difficult cricothyrotomy
rule "19 - Overall SHORT Assessment High"
    when
        $patient : PatientAirwayAssessment(shortCF > 0.6)
    then
        modify($patient) {
            setDifficultAirwayPredicted(true),
            setRecommendedApproach("Consider alternatives to cricothyrotomy as rescue technique")
        }
        logger.info("High SHORT score detected: CF = {}. Difficult cricothyrotomy likely.",$patient.getShortCF());
end

// RODS Rules for difficult airway assessment

// R - Restricted mouth opening
rule "20 - Difficult Airway - Restricted Mouth Opening"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "RODS",
            code == "R",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setRodsCF(CertaintyFactor.combine($patient.getRodsCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// O - Obstruction
rule "21 - Difficult Airway - Obstruction"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "RODS",
            code == "O",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setRodsCF(CertaintyFactor.combine($patient.getRodsCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// D - Distorted anatomy
rule "22 - Difficult Airway - Distorted Anatomy"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "RODS",
            code == "D",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setRodsCF(CertaintyFactor.combine($patient.getRodsCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// S - Stiff neck
rule "23 - Difficult Airway - Stiff Neck"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "RODS",
            code == "S",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setRodsCF(CertaintyFactor.combine($patient.getRodsCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// High overall RODS score indicates difficult airway
rule "24 - Overall RODS Assessment High"
    when
        $patient : PatientAirwayAssessment(rodsCF > 0.5)
    then
        modify($patient) {
            setDifficultAirwayPredicted(true),
            setRecommendedApproach("Consider video laryngoscopy or fiber optic intubation")
        }
        logger.info("High RODS score detected: CF = {}. Difficult airway likely.",$patient.getRodsCF());
end

// Rules for Airway Management Approach
rule "25 - Default Easy Airway Approach"
    salience -25
    when
        $patient : PatientAirwayAssessment(
            difficultAirwayPredicted == false
        )
        $fact : Fact(
            id == 1,
            status == Status.NOT_STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("Proceed with standard direct laryngoscopy"),
            setNextFactId(1),
            setNextFactDescription($fact.getDescription())
        }
        modify($fact) {
            setStatus(Status.STARTED)
        }
        // Record that Fact 1 was triggered for this patient
        $patient.addTriggeredFact($fact);
        logger.info($patient.toString());
end

// Laryngoscopy SUCCESSFUL/FAILED
rule "26 - Laryngoscopy SUCCESSFUL"
    salience -26  // Lower salience than Default Easy Airway Approach so it fires afterward
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Proceed with standard direct laryngoscopy"
        )
        $fact : Fact(
            id == 1,
            status == Status.SUCCESSFUL
        )
        $fact2 : Fact(
            id == 2,
            status == Status.NOT_STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("Facial Mask Ventilation")
        }
        modify($fact) {
            setNextFactId(2),
            setNextFactDescription($fact2.getDescription())
        }
        modify($fact2) {
            setStatus(Status.STARTED)
        }
        // Record that Fact 2 was triggered for this patient
        $patient.addTriggeredFact($fact2);
        logger.info($patient.toString());
end

rule "27 - Laryngoscopy FAILED"
    salience -27  // Lower salience than Default Easy Airway Approach so it fires afterward
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Proceed with standard direct laryngoscopy"
        )
        $fact : Fact(
            id == 1,
            status == Status.FAILED
        )
        $fact2 : Fact(
            id == 3,
            status == Status.NOT_STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("Unpredicted difficult airway - Apllying supraglottic airway device")
        }
        modify($fact) {
            setNextFactId(3),
            setNextFactDescription($fact2.getDescription())
        }
        modify($fact2) {
            setStatus(Status.STARTED)
        }
        // Record that Fact 3 was triggered for this patient
        $patient.addTriggeredFact($fact2);
        logger.info($patient.toString());
end

// Facial Mask Ventilation SUCCESSFUL/FAILED
rule "28 - Facial Mask Ventilation SUCCESSFUL"
    salience -28  // Lower salience than Default Easy Airway Approach so it fires afterward
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Facial Mask Ventilation"
        )
        $fact : Fact(
            id == 2,
            status == Status.SUCCESSFUL
        )
    then
        Conclusion c = new Conclusion(Conclusion.ENDOTRACHEAL_INTUBATION);
        insert(c);
        modify($fact) {
            setNextFactId(-1),
            setNextFactDescription(c.getDescription())
        }
        $patient.addTriggeredFact($fact);
        logger.info($patient.toString());
end

rule "29 - Facial Mask Ventilation FAILED"
    salience -29  // Lower salience than Default Easy Airway Approach so it fires afterward
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Facial Mask Ventilation"
        )
        $fact : Fact(
            id == 2,
            status == Status.FAILED
        )
        $fact2 : Fact(
            id == 3,
            status == Status.STARTED
        )
    then
        modify($patient)  {
            setRecommendedApproach("Unpredicted difficult airway - Apllying supraglottic airway device")
        }
        modify($fact) {
            setNextFactId(3),
            setNextFactDescription($fact2.getDescription())
        }
        $patient.addTriggeredFact($fact);
        logger.info($patient.toString());
end

// Supraglottic Airway Device SUCCESSFUL/FAILED
rule "30 - Apllying supraglottic airway device SUCCESS"
    salience -30  // Lower salience than Default Easy Airway Approach so it fires afterward
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Unpredicted difficult airway - Apllying supraglottic airway device"
        )
        $fact : Fact(
            id == 3,
            status == Status.SUCCESSFUL
        )
        $fact2 : Fact(
            id == 4,
            status == Status.NOT_STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("Fibroscopic Intubation")
        }
        modify($fact) {
            setNextFactId(4),
            setNextFactDescription($fact2.getDescription())
        }
        modify($fact2) {
            setStatus(Status.STARTED)
        }
        // Record that Fact 4 was triggered for this patient
        $patient.addTriggeredFact($fact2);
        logger.info($patient.toString());
end

rule "31 - Apllying supraglottic airway device FAILED"
    salience -31  // Lower salience than Default Easy Airway Approach so it fires afterward
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Unpredicted difficult airway - Apllying supraglottic airway device"
        )
        $fact : Fact(
            id == 3,
            status == Status.FAILED
        )
        $fact2 : Fact(
            id == 5,
            status == Status.NOT_STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("Oxygenize and Ventilate patient - Emergency")
        }
        modify($fact) {
            setNextFactId(5),
            setNextFactDescription($fact2.getDescription())
        }
        modify($fact2) {
            setStatus(Status.STARTED)
        }
        // Record that Fact 5 was triggered for this patient
        $patient.addTriggeredFact($fact2);
        logger.info($patient.toString());
end

// Oxygenize and Ventilate patient - Emergency SUCCESSFUL/FAILED
rule "32 - Oxygenize and Ventilate patient - Emergency SUCCESS"
    salience -32  // Lower salience than Default Easy Airway Approach so it fires afterward
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Oxygenize and Ventilate patient - Emergency"
        )
        $fact : Fact(
            id == 5,
            status == Status.SUCCESSFUL
        )
    then
        modify($patient) {
            setRecommendedApproach("Wake up pacient")
        }
        // Record that Fact 5 was triggered for this patient
        $patient.addTriggeredFact($fact);
        Conclusion c = new Conclusion(Conclusion.WAKE_UP_PATIENT);
        insert(c);
        // Mark this fact as terminal leading to the given conclusion
        modify($fact) {
            setNextFactId(-1),
            setNextFactDescription(c.getDescription())
        }
        logger.info($patient.toString());
end

rule "33 - Oxygenize and Ventilate patient - Emergency FAILED"
    salience -33  // Lower salience than Default Easy Airway Approach so it fires afterward
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Oxygenize and Ventilate patient - Emergency"
        )
        $fact : Fact(
            id == 5,
            status == Status.FAILED
        )
    then
        modify($patient) {
            setRecommendedApproach("Invasive technique (Cricothyrotomy)")
        }
        // Record that Fact 5 was triggered for this patient
        $patient.addTriggeredFact($fact);
        Conclusion c = new Conclusion(Conclusion.CRICOTOMY);
        insert(c);
        // Mark this fact as terminal leading to the given conclusion
        modify($fact) {
            setNextFactId(-1),
            setNextFactDescription(c.getDescription())
        }
        logger.info($patient.toString());
end

// Fibroscopic Intubation SUCCESSFUL/FAILED
rule "34 - Fibroscopic Intubation SUCCESS"
    salience -34  // Lower salience than Default Easy Airway Approach so it fires afterward
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Fibroscopic Intubation"
        )
        $fact : Fact(
            id == 4,
            status == Status.SUCCESSFUL
        )
    then
        modify($patient) {
            setRecommendedApproach("Intubation")
        }
        // Record the Conclusion
        $patient.addTriggeredFact($fact);
        Conclusion c = new Conclusion(Conclusion.INTUBATION);
        insert(c);
        // Mark this fact as terminal leading to the given conclusion
        modify($fact) {
            setNextFactId(-1),
            setNextFactDescription(c.getDescription())
        }
        logger.info($patient.toString());
end

rule "35 - Fibroscopic Intubation FAILED"
    salience -35
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Fibroscopic Intubation"
        )
        $fact : Fact(
            id == 4,
            status == Status.FAILED
        )
    then
        modify($patient) {
            setRecommendedApproach("Intubation")
        }
        // Record the Conclusion
        $patient.addTriggeredFact($fact);
        Conclusion c = new Conclusion(Conclusion.WAKE_UP_PATIENT);
        insert(c);
        // Mark this fact as terminal leading to the given conclusion
        modify($fact) {
            setNextFactId(-1),
            setNextFactDescription(c.getDescription())
        }
        logger.info($patient.toString());
end

// PREDICTED DIFFICULT AIRWAY PATHWAY
rule "36 - Predictable Difficult Airway"
    salience -36
    when
        $patient : PatientAirwayAssessment(
            difficultAirwayPredicted == true
        )
        $fact : Fact(
            id == 6,
            status == Status.NOT_STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("Difficult Airway Predicted - Seek other anesthetic airway management techniques"),
            setNextFactId(6),
            setNextFactDescription($fact.getDescription())
        }
        modify($fact) {
            setStatus(Status.STARTED)
        }
        // Record that Fact 1 was triggered for this patient
        $patient.addTriggeredFact($fact);
        logger.info($patient.toString());
end

// Alternative anesthetic technique SUCCESSFUL/FAILED
rule "37 - Alternative anesthetic technique SUCCESS"
    salience -37
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Difficult Airway Predicted - Seek other anesthetic airway management techniques"
        )
        $fact : Fact(
            id == 6,
            status == Status.SUCCESSFUL
        )
    then
        Conclusion c = new Conclusion(Conclusion.OTHER_TECHNIQUE);
        insert(c);
        modify($fact) {
            setNextFactId(-1),
            setNextFactDescription(c.getDescription())
        }
        $patient.addTriggeredFact($fact);
        logger.info($patient.toString());
end

rule "38 - Alternative anesthetic technique FAILED"
    salience -38
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Difficult Airway Predicted - Seek other anesthetic airway management techniques"
        )
        $fact : Fact(
            id == 6,
            status == Status.FAILED
        )
        $fact2 : Fact(
            id == 7,
            status == Status.NOT_STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("Airway approach with intubation")
        }
        modify($fact) {
            setNextFactId(7),
            setNextFactDescription($fact2.getDescription())
        }
        modify($fact2) {
            setStatus(Status.STARTED)
        }
        $patient.addTriggeredFact($fact2);
        logger.info($patient.toString());
end

// Airway approach with intubation SUCCESSFUL/FAILED
rule "39 - Airway approach with intubation SUCCESS"
    salience -39
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Airway approach with intubation"
        )
        $fact : Fact(
            id == 7,
            status == Status.SUCCESSFUL
        )
        $fact2 : Fact(
            id == 8,
            status == Status.NOT_STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("Non evasive technique - Success with intubation")
        }
        modify($fact) {
            setNextFactId(8),
            setNextFactDescription($fact2.getDescription())
        }
        modify($fact2) {
            setStatus(Status.STARTED)
        }
        $patient.addTriggeredFact($fact2);
        logger.info($patient.toString());
end

rule "40 - Airway approach with intubation FAILED"
    salience -40
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Airway approach with intubation"
        )
        $fact : Fact(
            id == 7,
            status == Status.FAILED
        )
    then
        Conclusion c = new Conclusion(Conclusion.CRICOTOMY);
        insert(c);
        modify($fact) {
            setNextFactId(-1),
            setNextFactDescription(c.getDescription())
        }
        $patient.addTriggeredFact($fact);
        logger.info($patient.toString());
end


rule "41 - Non evasive technique - Success with intubation SUCCESS"
    salience -41
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Non evasive technique - Success with intubation"
        )
        $fact : Fact(
            id == 8,
            status == Status.SUCCESSFUL
        )
     then
         Conclusion c = new Conclusion(Conclusion.GENERAL_ANESTHESIA);
         insert(c);
         modify($fact) {
             setNextFactId(-1),
             setNextFactDescription(c.getDescription())
         }
         $patient.addTriggeredFact($fact);
         logger.info($patient.toString());
 end

 rule "42 - Non evasive technique - Success with intubation FAILED"
     salience -42
     when
         $patient : PatientAirwayAssessment(
             recommendedApproach == "Non evasive technique - Success with intubation"
         )
         $fact : Fact(
             id == 8,
             status == Status.FAILED
         )
         $fact2 : Fact(
             id == 9,
             status == Status.NOT_STARTED
         )
     then
         modify($patient) {
             setRecommendedApproach("Planned surgery")
         }
         modify($fact) {
             setNextFactId(9),
             setNextFactDescription($fact2.getDescription())
         }
         modify($fact2) {
             setStatus(Status.STARTED)
         }
         $patient.addTriggeredFact($fact2);
         logger.info($patient.toString());
 end

 rule "41 - Planned surgery SUCCESS"
     salience -41
     when
         $patient : PatientAirwayAssessment(
             recommendedApproach == "Planned surgery"
         )
         $fact : Fact(
             id == 9,
             status == Status.SUCCESSFUL
         )
      then
          Conclusion c = new Conclusion(Conclusion.CANCEL_PROCEDURE);
          insert(c);
          modify($fact) {
              setNextFactId(-1),
              setNextFactDescription(c.getDescription())
          }
          $patient.addTriggeredFact($fact);
          logger.info($patient.toString());
  end

  rule "42 - Planned surgery SUCCESS"
       salience -42
       when
           $patient : PatientAirwayAssessment(
               recommendedApproach == "Planned surgery"
           )
           $fact : Fact(
               id == 9,
               status == Status.FAILED
           )
        then
            Conclusion c = new Conclusion(Conclusion.CRICOTOMY);
            insert(c);
            modify($fact) {
                setNextFactId(-1),
                setNextFactDescription(c.getDescription())
            }
            $patient.addTriggeredFact($fact);
            logger.info($patient.toString());
    end