package meia.challenges.challenge1.rules

import meia.challenges.challenge1.facts.PatientAirwayAssessment;
import meia.challenges.challenge1.facts.AssessmentFactor;
import meia.challenges.challenge1.facts.Fact;
import meia.challenges.challenge1.facts.Status;
import meia.challenges.challenge1.utils.CertaintyFactor;
import meia.challenges.challenge1.config.CertaintyFactorUtil;
import org.slf4j.Logger
global Logger logger;

// LEMON Rules for difficult laryngoscopy prediction

// L - Look externally
rule "Difficult Laryngoscopy - Look Externally"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "LEMON",
            code == "L",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setLemonCF(CertaintyFactor.combine($patient.getLemonCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// E - Evaluate 3-3-2 rule
rule "Difficult Laryngoscopy - Evaluate 3-3-2 Rule"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "LEMON",
            code == "E",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setLemonCF(CertaintyFactor.combine($patient.getLemonCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// M - Mallampati score
rule "Difficult Laryngoscopy - Mallampati Score High"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "LEMON",
            code == "M",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setLemonCF(CertaintyFactor.combine($patient.getLemonCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// O - Obstruction/Obesity
rule "Difficult Laryngoscopy - Obstruction or Obesity"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "LEMON",
            code == "O",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setLemonCF(CertaintyFactor.combine($patient.getLemonCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// N - Neck mobility
rule "Difficult Laryngoscopy - Neck Mobility"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "LEMON",
            code == "N",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setLemonCF(CertaintyFactor.combine($patient.getLemonCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// High overall LEMON score indicates difficult laryngoscopy
rule "Overall LEMON Assessment High"
    when
        $patient : PatientAirwayAssessment(lemonCF > 0.6)
    then
        modify($patient) {
            setDifficultAirwayPredicted(true),
            setRecommendedApproach("Consider alternative techniques to direct laryngoscopy")
        }
        logger.info("High LEMON score detected: CF = " + $patient.getLemonCF() +
            ". Difficult laryngoscopy likely.");
end

// MOANS Rules for difficult mask ventilation prediction

// M - Mask seal
rule "Difficult Mask Ventilation - Mask Seal"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "MOANS",
            code == "M",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// O - Obstruction
rule "Difficult Mask Ventilation - Obstruction"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "MOANS",
            code == "O",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// A - Age
rule "Difficult Mask Ventilation - Advanced Age"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "MOANS",
            code == "A",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// N - No teeth
rule "Difficult Mask Ventilation - No Teeth"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "MOANS",
            code == "N",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// S - Stiff
rule "Difficult Mask Ventilation - Stiff Lungs or Airway"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "MOANS",
            code == "S",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// BMI specific rule
rule "Difficult Mask Ventilation - BMI Over 26"
    when
        $patient : PatientAirwayAssessment(bmi > 26)
    then
        modify($patient) {
            setMoansCF(CertaintyFactor.combine($patient.getMoansCF(), CertaintyFactorUtil.getCertaintyFactor("moans.bmi")))
        }
        logger.info("Patient has BMI > 26, increasing MOANS CF");
end

// High overall MOANS score indicates difficult mask ventilation
rule "Overall MOANS Assessment High"
    when
        $patient : PatientAirwayAssessment(moansCF > 0.6)
    then
        modify($patient) {
            setDifficultAirwayPredicted(true),
            setRecommendedApproach("Consider alternative ventilation techniques")
        }
        logger.info("High MOANS score detected: CF = {}. Difficult mask ventilation likely.",$patient.getMoansCF());
end

// SHORT Rules for difficult cricothyrotomy prediction

// S - Surgery or disruption to the airway
rule "Difficult Cricothyrotomy - Surgery or Disruption"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "SHORT",
            code == "S",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setShortCF(CertaintyFactor.combine($patient.getShortCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// H - Hematoma or infection
rule "Difficult Cricothyrotomy - Hematoma or Infection"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "SHORT",
            code == "H",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setShortCF(CertaintyFactor.combine($patient.getShortCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// O - Obesity
rule "Difficult Cricothyrotomy - Obesity"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "SHORT",
            code == "O",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setShortCF(CertaintyFactor.combine($patient.getShortCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// R - Radiation distortion
rule "Difficult Cricothyrotomy - Radiation"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "SHORT",
            code == "R",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setShortCF(CertaintyFactor.combine($patient.getShortCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// T - Tumor
rule "Difficult Cricothyrotomy - Tumor"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "SHORT",
            code == "T",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setShortCF(CertaintyFactor.combine($patient.getShortCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// High overall SHORT score indicates difficult cricothyrotomy
rule "Overall SHORT Assessment High"
    when
        $patient : PatientAirwayAssessment(shortCF > 0.6)
    then
        modify($patient) {
            setDifficultAirwayPredicted(true),
            setRecommendedApproach("Consider alternatives to cricothyrotomy as rescue technique")
        }
        logger.info("High SHORT score detected: CF = {}. Difficult cricothyrotomy likely.",$patient.getShortCF());
end

// RODS Rules for difficult airway assessment

// R - Restricted mouth opening
rule "Difficult Airway - Restricted Mouth Opening"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "RODS",
            code == "R",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setRodsCF(CertaintyFactor.combine($patient.getRodsCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// O - Obstruction
rule "Difficult Airway - Obstruction"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "RODS",
            code == "O",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setRodsCF(CertaintyFactor.combine($patient.getRodsCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// D - Distorted anatomy
rule "Difficult Airway - Distorted Anatomy"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "RODS",
            code == "D",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setRodsCF(CertaintyFactor.combine($patient.getRodsCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// S - Stiff neck
rule "Difficult Airway - Stiff Neck"
    when
        $patient : PatientAirwayAssessment()
        $factor : AssessmentFactor(
            category == "RODS",
            code == "S",
            present == true
        )
    then
        double cf = CertaintyFactorUtil.getCertaintyFactor($factor.getCategory().toLowerCase() + "." + $factor.getCode().toLowerCase());
        modify($patient) {
            setRodsCF(CertaintyFactor.combine($patient.getRodsCF(), cf))
        }
        modify($factor) {
            setCertaintyFactor(cf)
        }
end

// High overall RODS score indicates difficult airway
rule "Overall RODS Assessment High"
    when
        $patient : PatientAirwayAssessment(rodsCF > 0.5)
    then
        modify($patient) {
            setDifficultAirwayPredicted(true),
            setRecommendedApproach("Consider video laryngoscopy or fiber optic intubation")
        }
        logger.info("High RODS score detected: CF = {}. Difficult airway likely.",$patient.getRodsCF());
end

rule "Default Easy Airway Approach"
    salience -100
    when
        $patient : PatientAirwayAssessment(
            difficultAirwayPredicted == false
        )
        $fact : Fact(
            id == 1,
            status == Status.NOT_STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("Proceed with standard direct laryngoscopy"),
            setNextFactId(1)
        }
        logger.info($patient.toString());
end

rule "Set Laryngoscopy Status Started"
    salience -110  // Lower salience than Default Easy Airway Approach so it fires afterward
    when
        $patient : PatientAirwayAssessment(
            recommendedApproach == "Proceed with standard direct laryngoscopy"
        )
        $fact : Fact(
            id == 1,
            status == Status.NOT_STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("Start standard direct laryngoscopy")
        }
        modify($fact) {
            setStatus(Status.SUCCESSFUL)
        }
        logger.info($patient.toString());
end

rule "Set Laryngoscopy Status Successful"
    salience -120  // Lower salience than Set Laryngoscopy Status Started
    when
        $patient : PatientAirwayAssessment()
        $fact : Fact(
            id == 1,
            status == Status.NOT_STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("SUCCESS: Apply facial mask ventilation")
        }
        modify($fact) {
            setStatus(Status.FAILED),
            setNextFactId(2)
        }
        logger.info($patient.toString());
end

rule "Set Laryngoscopy Status Failed"
    salience -130  // Lower salience than Set Laryngoscopy Status Started
    when
        $patient : PatientAirwayAssessment()
        $fact : Fact(
            id == 1,
            status == Status.STARTED
        )
    then
        modify($patient) {
            setRecommendedApproach("FAILED: Difficult airway encountered, prepare for alternative techniques")
        }
        modify($fact) {
            setStatus(Status.FAILED),
            setNextFactId(10)
        }
        logger.info($patient.toString());
end
